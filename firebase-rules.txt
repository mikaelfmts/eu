rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
      // ===== FUNÇÕES DE VALIDAÇÃO =====
    function isValidMessage() {
      return request.resource.data.keys().hasAll(['nome', 'mensagem', 'hora', 'chat_id'])
        && request.resource.data.nome is string
        && request.resource.data.mensagem is string
        && request.resource.data.hora is timestamp
        && request.resource.data.chat_id is string
        && request.resource.data.nome.size() > 0
        && request.resource.data.mensagem.size() > 0
        && request.resource.data.chat_id.size() > 0;
    }    function isValidUpdate() {
      // Permite atualização dos campos de resposta do admin
      // Verifica se apenas campos permitidos estão sendo alterados
      return request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['resposta', 'horaResposta', 'respondido'])
        && request.auth != null
        && request.resource.data.resposta is string
        && request.resource.data.horaResposta is timestamp
        && request.resource.data.respondido is bool;
    }
    
    // ===== REGRAS PARA CURRÍCULO =====
    // Permite leitura pública e escrita autenticada para currículos
    match /curriculum/{curriculumId} {
      // Leitura pública - qualquer pessoa pode ver o currículo
      allow read: if true;
      
      // Escrita apenas para usuários autenticados (incluindo anônimos)
      allow write: if request.auth != null;
      
      // Criação de novos documentos
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['personalData', 'settings', 'metadata'])
        && request.resource.data.metadata.createdAt is timestamp;
      
      // Atualização de documentos existentes
      allow update: if request.auth != null 
        && request.resource.data.metadata.lastUpdated is timestamp;
        // Deletar (qualquer usuário autenticado)
      allow delete: if request.auth != null;
    }    // ===== REGRAS PARA MENSAGENS (SIMPLIFICADAS) =====
    // Sistema de contato do site
    match /mensagens/{messageId} {
      // Permite leitura para todos (necessário para o chat público)
      allow read: if true;
      
      // Permite criação de novas mensagens com validação
      allow create: if isValidMessage();
      
      // Permite atualizações para usuários autenticados (para respostas do admin)
      // Aceita qualquer usuário autenticado como admin válido
      allow update: if request.auth != null 
        && isValidUpdate();
      
      // Não permite deletar mensagens (manter histórico)
      allow delete: if false;
    }
      // ===== REGRAS PARA CONFIGURAÇÕES (SIMPLIFICADAS) =====
    // Configurações do sistema e manutenção
    match /configuracoes/{configId} {
      // Leitura pública para verificar status de manutenção
      allow read: if true;
      
      // Permite modificações para qualquer usuário autenticado
      allow write: if request.auth != null;
    }
      // ===== REGRAS PARA CERTIFICADOS (SIMPLIFICADAS) =====
    // Certificados em progresso
    match /certificados/{certificadoId} {
      // Leitura pública dos certificados
      allow read: if true;
      
      // Permite modificações para qualquer usuário autenticado
      allow write: if request.auth != null;
      
      // Validação de estrutura dos certificados
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['titulo', 'instituicao', 'status'])
        && request.resource.data.status in ['concluido', 'em progresso'];
    }
      // ===== REGRAS PARA USUÁRIOS =====
    // Perfis de usuário
    match /users/{userId} {
      // Usuários podem ler seu próprio perfil
      allow read: if request.auth != null 
        && request.auth.uid == userId;
      
      // Usuários podem criar/atualizar seu próprio perfil
      allow write: if request.auth != null 
        && request.auth.uid == userId;
      
      // Usuários autenticados podem ler todos os perfis
      allow read: if request.auth != null;
    }
      // ===== REGRAS PARA PROJETOS (OPCIONAL) =====
    // Se você quiser adicionar projetos no futuro
    match /projetos/{projetoId} {
      // Leitura pública dos projetos
      allow read: if true;
      
      // Qualquer usuário autenticado pode modificar projetos
      allow write: if request.auth != null;
    }    // ===== REGRAS PARA ANALYTICS (OPCIONAL) =====
    // Dados de analytics do site
    match /analytics/{analyticsId} {
      // Usuários autenticados podem ler analytics
      allow read: if request.auth != null;
      
      // Sistema pode gravar dados de analytics
      allow create: if true;
    }
    
    // ===== REGRAS PARA GALERIA DE MÍDIA =====
    // Posts da galeria de mídia
    match /galeria_posts/{postId} {
      // Leitura pública dos posts visíveis
      allow read: if true;
      
      // Apenas usuários autenticados podem criar/modificar posts
      allow write: if request.auth != null;
      
      // Validação de estrutura dos posts
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['title', 'media', 'createdAt', 'visible'])
        && request.resource.data.title is string
        && request.resource.data.media is list
        && request.resource.data.visible is bool;
    }
    
    // ===== REGRAS PARA CONFIGURAÇÕES DO SITE =====
    // Configurações gerais incluindo mídia em destaque
    match /site_config/{configId} {
      // Leitura pública das configurações
      allow read: if true;
      
      // Apenas usuários autenticados podem modificar configurações
      allow write: if request.auth != null;
    }
    
    // ===== REGRAS PADRÃO =====
    // Negar acesso a qualquer outra coleção não especificada
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Regra para galeria - leitura pública, escrita autenticada
    match /galeria/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null
        && request.resource.size <= 50 * 1024 * 1024
        && request.resource.contentType.matches('image/.*|video/.*');
    }
    
    // Regra para testes - leitura pública, escrita autenticada
    match /test-cors/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Regra para debug - leitura pública, escrita autenticada
    match /debug-upload/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}