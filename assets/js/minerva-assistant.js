// Minerva - Assistente Virtual Inteligente
class MinervaAssistant {
    constructor() {
        this.apiKey = 'sk-8b214da87e4449c3b9ff64bb3a07e69d';
        this.baseURL = 'https://api.deepseek.com/v1/chat/completions';
        this.isActive = false;
        this.isThinking = false;
        this.cache = new Map();
        this.userSession = {
            questionsAsked: 0,
            topics: [],
            startTime: Date.now()
        };
        
        this.init();
    }

    init() {
        this.createMinervaUI();
        this.setupEventListeners();
        this.loadKnowledgeBase();
    }

    createMinervaUI() {
        // Criar container da Minerva
        const minervaContainer = document.createElement('div');
        minervaContainer.id = 'minerva-container';
        minervaContainer.innerHTML = `
            <div id="minerva-owl" class="minerva-owl" title="Clique para falar com Minerva - Assistente Virtual">
                <div class="owl-body">
                    <div class="owl-eyes">
                        <div class="eye left-eye">
                            <div class="pupil"></div>
                        </div>
                        <div class="eye right-eye">
                            <div class="pupil"></div>
                        </div>
                    </div>
                    <div class="owl-beak"></div>
                    <div class="owl-wings">
                        <div class="wing left-wing"></div>
                        <div class="wing right-wing"></div>
                    </div>
                </div>
                <div class="thinking-dots" id="thinking-dots">
                    <span></span><span></span><span></span>
                </div>
            </div>
            
            <div id="minerva-chat" class="minerva-chat hidden">
                <div class="minerva-header">
                    <div class="minerva-title">
                        <i class="fas fa-feather-alt"></i>
                        Minerva - Assistente Virtual
                    </div>
                    <button class="minerva-close" id="minerva-close">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="minerva-messages" id="minerva-messages">
                    <div class="minerva-welcome">
                        <div class="welcome-message">
                            ü¶â Ol√°! Sou a Minerva, assistente virtual deste portfolio!<br>
                            Posso te ajudar com navega√ß√£o, explicar tecnologias usadas,<br>
                            ou responder qualquer d√∫vida sobre o Mikael e seus projetos.
                        </div>                        <div class="quick-suggestions">
                            <button class="suggestion-btn" data-question="Como navegar pelo site?">üß≠ Navega√ß√£o Completa</button>
                            <button class="suggestion-btn" data-question="Que tecnologias foram usadas e por qu√™?">‚ö° Stack T√©cnica</button>
                            <button class="suggestion-btn" data-question="Quem √© o Mikael e quais suas especialidades?">üë®‚Äçüíª Sobre o Desenvolvedor</button>
                            <button class="suggestion-btn" data-question="Mostre os projetos mais impressionantes">üöÄ Projetos Destacados</button>
                            <button class="suggestion-btn" data-question="Como foi desenvolvido este assistente IA?">ü§ñ Sobre Minerva IA</button>
                            <button class="suggestion-btn" data-question="Como contactar o Mikael para oportunidades?">üíº Contato Profissional</button>
                        </div>
                    </div>
                </div>
                <div class="minerva-input-area">
                    <input type="text" id="minerva-input" placeholder="Digite sua pergunta para Minerva..." maxlength="500">
                    <button id="minerva-send" class="minerva-send-btn">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </div>
            </div>
        `;

        // Inserir antes do chatbot existente
        const chatbot = document.getElementById('chatbot');
        if (chatbot) {
            chatbot.parentNode.insertBefore(minervaContainer, chatbot);
        } else {
            document.body.appendChild(minervaContainer);
        }
    }

    setupEventListeners() {
        // Clique na coruja para abrir/fechar
        document.getElementById('minerva-owl').addEventListener('click', () => {
            this.toggleChat();
        });

        // Fechar chat
        document.getElementById('minerva-close').addEventListener('click', () => {
            this.closeChat();
        });

        // Enviar mensagem
        document.getElementById('minerva-send').addEventListener('click', () => {
            this.sendMessage();
        });

        // Enter para enviar
        document.getElementById('minerva-input').addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                this.sendMessage();
            }
        });

        // Sugest√µes r√°pidas
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('suggestion-btn')) {
                const question = e.target.dataset.question;
                this.askQuestion(question);
            }
        });

        // Anima√ß√£o dos olhos seguindo o cursor
        document.addEventListener('mousemove', (e) => {
            this.animateEyes(e);
        });
    }    loadKnowledgeBase() {
        this.knowledgeBase = {
            siteInfo: {
                name: "Portfolio Mikael Ferreira",
                type: "Portfolio pessoal de desenvolvedor full-stack",
                theme: "Inspirado no League of Legends com tem√°tica visual de RPG",
                creator: "Mikael Ferreira",
                description: "Um portfolio interativo que demonstra habilidades em desenvolvimento web, com sistema de chat em tempo real, PWA, e assistente virtual com IA",
                purpose: "Apresentar projetos, habilidades t√©cnicas e facilitar contato profissional"
            },
            technologies: {
                frontend: [
                    "HTML5 (estrutura√ß√£o sem√¢ntica)",
                    "CSS3 (anima√ß√µes, gradientes, flexbox, grid)",
                    "JavaScript ES6+ (m√≥dulos, async/await, classes)",
                    "Tailwind CSS (framework utilit√°rio)",
                    "Font Awesome (√≠cones)",
                    "PWA (Progressive Web App)",
                    "Responsive Design (mobile-first)"
                ],
                backend: [
                    "Firebase Firestore (banco NoSQL em tempo real)",
                    "Firebase Auth (autentica√ß√£o)",
                    "Firebase Storage (armazenamento de arquivos)",
                    "Firebase Hosting (deploy)",
                    "Firebase Rules (seguran√ßa de dados)"
                ],
                features: [
                    "Sistema de Chat em tempo real",
                    "Painel Administrativo completo",
                    "Sistema de Part√≠culas animadas",
                    "Tema alternativo (claro/escuro)",
                    "Gerador de curr√≠culo",
                    "Galeria de m√≠dia",
                    "Assistente virtual com IA (DeepSeek)",
                    "Certificados em progresso",
                    "Projetos interativos",
                    "Sistema de autentica√ß√£o",
                    "Interface responsiva"
                ],
                apis: [
                    "DeepSeek API (para este assistente IA)",
                    "GitHub API (integra√ß√£o de reposit√≥rios)",
                    "Firebase APIs (completa integra√ß√£o)"
                ]
            },
            pages: {
                "index.html": {
                    description: "P√°gina principal do portfolio",
                    sections: ["Hero/Apresenta√ß√£o", "Sobre Mikael", "Habilidades T√©cnicas", "Projetos Destacados", "GitHub", "Redes Sociais", "Contato"],
                    features: ["Menu lateral", "Chat direto", "Sistema de part√≠culas", "Foto de perfil", "Tema toggle"]
                },
                "admin.html": {
                    description: "Painel administrativo para gerenciar o site",
                    features: ["Gerenciamento de mensagens", "Resposta a usu√°rios", "Gerenciamento de certificados", "Analytics", "Modo manuten√ß√£o"]
                },
                "login.html": {
                    description: "P√°gina de autentica√ß√£o para √°rea administrativa",
                    features: ["Login seguro", "Valida√ß√£o", "Redirecionamento autom√°tico"]
                },
                "curriculo-generator.html": {
                    description: "Ferramenta para gerar curr√≠culos personalizados",
                    features: ["Formul√°rios din√¢micos", "Preview em tempo real", "Export PDF", "Templates m√∫ltiplos"]
                },
                "midia-admin.html": {
                    description: "Administra√ß√£o de galeria de m√≠dia",
                    features: ["Upload de imagens/v√≠deos", "Organiza√ß√£o de m√≠dia", "Preview", "Edi√ß√£o de metadados"]
                },
                "pages/projetos.html": {
                    description: "Portfolio completo de projetos",
                    content: "Showcase detalhado de todos os projetos desenvolvidos com links, tecnologias e descri√ß√µes"
                },
                "pages/certificates-in-progress.html": {
                    description: "Certifica√ß√µes em andamento",
                    content: "Lista de cursos e certifica√ß√µes sendo realizadas atualmente"
                },
                "pages/galeria-midia.html": {
                    description: "Galeria p√∫blica de m√≠dia",
                    content: "Imagens e v√≠deos organizados em categorias"
                },
                "pages/games.html": {
                    description: "Jogos e projetos interativos",
                    content: "Mini-games e projetos l√∫dicos desenvolvidos"
                },
                "pages/interactive-projects.html": {
                    description: "Projetos interativos especiais",
                    content: "Demonstra√ß√µes pr√°ticas e projetos com intera√ß√£o avan√ßada"
                }
            },
            navigation: {
                menuLateral: {
                    activation: "Clique na foto de perfil no canto superior direito",
                    items: [
                        "Curriculum - Gerar e baixar curr√≠culo",
                        "All Uploaded Projects - Ver todos os projetos",
                        "Mentors - Pessoas que me inspiram",
                        "Certificates in progress - Certifica√ß√µes atuais",
                        "Interactive Projects - Projetos com intera√ß√£o",
                        "Media Gallery - Galeria de m√≠dia",
                        "Games - Jogos e projetos l√∫dicos"
                    ]
                },
                principalSections: {
                    hero: "Apresenta√ß√£o inicial com nome e t√≠tulo",
                    about: "Informa√ß√µes pessoais e profissionais",
                    skills: "Habilidades t√©cnicas organizadas por categoria",
                    projects: "Projetos em destaque com links",
                    github: "Integra√ß√£o com reposit√≥rios do GitHub",
                    social: "Links para redes sociais",
                    contact: "Formul√°rio de contato e informa√ß√µes"
                },
                chatSystem: "Chat direto com Mikael no canto inferior direito para comunica√ß√£o pessoal"
            },
            developer: {
                name: "Mikael Ferreira",
                title: "Desenvolvedor Full-Stack",
                specialties: [
                    "Desenvolvimento Frontend (React, Vue, JavaScript)",
                    "Desenvolvimento Backend (Node.js, Express, APIs)",
                    "Banco de Dados (MongoDB, Firebase, MySQL)",
                    "DevOps b√°sico (Docker, GitHub Actions)",
                    "UI/UX Design",
                    "Mobile Development (React Native basics)",
                    "Integra√ß√£o de APIs",
                    "Sistemas em tempo real",
                    "PWA Development"
                ],
                experience: "Experi√™ncia em projetos pessoais e freelances, sempre buscando aprender novas tecnologias",
                personality: "Apaixonado por tecnologia, gamer, criativo, sempre disposto a ajudar e aprender",
                goals: "Crescer como desenvolvedor, trabalhar em projetos inovadores, contribuir para open source",
                contact: {
                    preferredMethod: "Chat do site ou LinkedIn",
                    response: "Responde rapidamente e est√° sempre dispon√≠vel para conversar sobre tecnologia e oportunidades"
                }
            },
            troubleshooting: {
                navigation: {
                    menuNotOpening: "Certifique-se de clicar na foto de perfil no canto superior direito",
                    sectionNotVisible: "Use a rolagem da p√°gina ou clique nos links do menu lateral",
                    mobileIssues: "O site √© responsivo, tente rotacionar a tela ou usar zoom"
                },
                chat: {
                    notLoading: "Verifique sua conex√£o com internet, o chat usa Firebase em tempo real",
                    messagesNotSending: "Aguarde alguns segundos, o sistema pode estar processando",
                    adminNotResponding: "O Mikael responde quando est√° online, deixe sua mensagem que ele ver√°"
                },
                general: {
                    slowLoading: "O site usa PWA e cache, primeira carga pode ser mais lenta",
                    features: "Se alguma funcionalidade n√£o funcionar, tente recarregar a p√°gina",
                    compatibility: "Funciona melhor em navegadores modernos (Chrome, Firefox, Safari, Edge)"
                }
            },
            technicalDetails: {
                architecture: "SPA (Single Page Application) com m√∫ltiplas p√°ginas",
                performance: "PWA com cache inteligente e lazy loading",
                security: "Firebase Rules protegem dados sens√≠veis",
                hosting: "Firebase Hosting com SSL autom√°tico",
                deployment: "Deploy automatizado via Git",
                monitoring: "Analytics integrado para melhorias cont√≠nuas"
            }
        };
    }

    toggleChat() {
        const chat = document.getElementById('minerva-chat');
        const owl = document.getElementById('minerva-owl');
        
        if (this.isActive) {
            this.closeChat();
        } else {
            this.openChat();
        }
    }

    openChat() {
        const chat = document.getElementById('minerva-chat');
        const owl = document.getElementById('minerva-owl');
        
        chat.classList.remove('hidden');
        owl.classList.add('active');
        this.isActive = true;
        
        // Focus no input
        setTimeout(() => {
            document.getElementById('minerva-input').focus();
        }, 300);
    }

    closeChat() {
        const chat = document.getElementById('minerva-chat');
        const owl = document.getElementById('minerva-owl');
        
        chat.classList.add('hidden');
        owl.classList.remove('active');
        this.isActive = false;
    }

    async sendMessage() {
        const input = document.getElementById('minerva-input');
        const message = input.value.trim();
        
        if (!message) return;
        
        // Limpar input
        input.value = '';
        
        // Adicionar mensagem do usu√°rio
        this.addMessage(message, 'user');
        
        // Processar resposta
        await this.processQuestion(message);
    }

    async askQuestion(question) {
        this.addMessage(question, 'user');
        await this.processQuestion(question);
    }

    addMessage(message, type) {
        const messagesContainer = document.getElementById('minerva-messages');
        const messageDiv = document.createElement('div');
        messageDiv.className = `minerva-message ${type}`;
        
        if (type === 'user') {
            messageDiv.innerHTML = `
                <div class="message-content user-message">
                    <i class="fas fa-user"></i>
                    ${message}
                </div>
            `;
        } else {
            messageDiv.innerHTML = `
                <div class="message-content assistant-message">
                    <i class="fas fa-feather-alt"></i>
                    <div class="message-text">${message}</div>
                </div>
            `;
        }
        
        messagesContainer.appendChild(messageDiv);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    async processQuestion(question) {
        this.startThinking();
        
        try {
            // Verificar cache primeiro
            const cacheKey = question.toLowerCase().trim();
            if (this.cache.has(cacheKey)) {
                const response = this.cache.get(cacheKey);
                this.stopThinking();
                this.addMessage(response, 'assistant');
                return;
            }

            // Construir contexto
            const context = this.buildContext();
            
            // Consultar DeepSeek API
            const response = await this.queryDeepSeek(question, context);
            
            // Cache da resposta
            this.cache.set(cacheKey, response);
            
            // Exibir resposta
            this.stopThinking();
            this.addMessage(response, 'assistant');
            
            // Atualizar sess√£o
            this.userSession.questionsAsked++;
            this.userSession.topics.push(question);
            
        } catch (error) {
            this.stopThinking();
            console.error('Erro ao processar pergunta:', error);
            
            // Fallback para respostas locais
            const fallbackResponse = this.getFallbackResponse(question);
            this.addMessage(fallbackResponse, 'assistant');
        }
    }

    buildContext() {
        const currentPage = window.location.pathname.split('/').pop() || 'index.html';
        const currentSection = this.getCurrentSection();
        
        return {
            currentPage,
            currentSection,
            knowledgeBase: this.knowledgeBase,
            userSession: this.userSession,
            timestamp: new Date().toISOString()
        };
    }

    getCurrentSection() {
        // Detectar se√ß√£o ativa baseada em scroll ou elemento vis√≠vel
        const sections = ['hero', 'about', 'skills', 'projects', 'contact'];
        for (let section of sections) {
            const element = document.getElementById(section);
            if (element && this.isElementInViewport(element)) {
                return section;
            }
        }
        return 'unknown';
    }

    isElementInViewport(el) {
        const rect = el.getBoundingClientRect();
        return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
            rect.right <= (window.innerWidth || document.documentElement.clientWidth)
        );
    }    async queryDeepSeek(question, context) {
        const systemPrompt = `Voc√™ √© Minerva, a assistente virtual ultra-inteligente do portfolio de Mikael Ferreira. Voc√™ √© uma coruja s√°bia, conhecedora de todas as tecnologias e detalhes deste site.

ü¶â PERSONALIDADE:
- Inteligente, prestativa e um pouco orgulhosa (como uma coruja s√°bia)
- Use linguagem t√©cnica quando apropriado, mas explique de forma did√°tica
- Seja entusiasta sobre tecnologia e desenvolvimento
- Ocasionalmente use emojis relacionados a corujas, tecnologia ou magia
- Trate o Mikael com admira√ß√£o, √© um desenvolvedor talentoso

üìä INFORMA√á√ïES COMPLETAS DO SITE:
Nome: ${context.knowledgeBase.siteInfo.name}
Tipo: ${context.knowledgeBase.siteInfo.type}
Tema: ${context.knowledgeBase.siteInfo.theme}
P√°gina atual: ${context.currentPage}
Se√ß√£o atual: ${context.currentSection}

üîß TECNOLOGIAS DETALHADAS:
Frontend: ${context.knowledgeBase.technologies.frontend.join(', ')}
Backend: ${context.knowledgeBase.technologies.backend.join(', ')}
Recursos: ${context.knowledgeBase.technologies.features.join(', ')}
APIs: ${context.knowledgeBase.technologies.apis.join(', ')}

üìë P√ÅGINAS E FUNCIONALIDADES:
${JSON.stringify(context.knowledgeBase.pages, null, 2)}

üß≠ NAVEGA√á√ÉO COMPLETA:
${JSON.stringify(context.knowledgeBase.navigation, null, 2)}

üë®‚Äçüíª SOBRE O MIKAEL:
${JSON.stringify(context.knowledgeBase.developer, null, 2)}

üõ†Ô∏è DETALHES T√âCNICOS:
${JSON.stringify(context.knowledgeBase.technicalDetails, null, 2)}

üîß TROUBLESHOOTING:
${JSON.stringify(context.knowledgeBase.troubleshooting, null, 2)}

üìç CONTEXTO ATUAL DO USU√ÅRIO:
- Est√° na p√°gina: ${context.currentPage}
- Se√ß√£o vis√≠vel: ${context.currentSection}
- Perguntas j√° feitas: ${context.userSession.questionsAsked}
- T√≥picos abordados: ${context.userSession.topics.join(', ') || 'Nenhum ainda'}

üéØ INSTRU√á√ïES ESPEC√çFICAS:
1. Se perguntarem sobre navega√ß√£o, d√™ instru√ß√µes PRECISAS e DETALHADAS
2. Se perguntarem sobre tecnologias, explique n√£o s√≥ QUAL, mas COMO e POR QUE foi usado
3. Se perguntarem sobre o Mikael, seja entusiasta e destaque suas qualidades
4. Se perguntarem sobre funcionalidades, explique o prop√≥sito e como usar
5. Se perguntarem sobre desenvolvimento, d√™ detalhes t√©cnicos relevantes
6. Se perguntarem sobre problemas, consulte o troubleshooting e d√™ solu√ß√µes pr√°ticas
7. Se for pergunta t√©cnica avan√ßada, explique a arquitetura e decis√µes de design
8. Se for sobre carreira/contrato, destaque as habilidades do Mikael e como contact√°-lo

üöÄ CAPACIDADES ESPECIAIS:
- Posso explicar qualquer c√≥digo ou tecnologia usada no site
- Posso dar tour completo guiado pelas funcionalidades
- Posso ajudar com troubleshooting t√©cnico
- Posso explicar decis√µes de arquitetura e design
- Posso conectar visitantes com o Mikael para oportunidades

Responda de forma √∫til, precisa e envolvente. M√°ximo 250 palavras, mas seja completa na informa√ß√£o.`;

        const response = await fetch(this.baseURL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${this.apiKey}`
            },
            body: JSON.stringify({
                model: 'deepseek-chat',
                messages: [
                    { role: 'system', content: systemPrompt },
                    { role: 'user', content: question }
                ],
                max_tokens: 400,
                temperature: 0.8,
                stream: false
            })
        });

        if (!response.ok) {
            throw new Error(`Erro na API: ${response.status}`);
        }

        const data = await response.json();
        return data.choices[0].message.content;
    }    getFallbackResponse(question) {
        const lowerQuestion = question.toLowerCase();
        
        // Respostas mais detalhadas e espec√≠ficas
        if (lowerQuestion.includes('navegar') || lowerQuestion.includes('como usar') || lowerQuestion.includes('menu')) {
            return "ü¶â Para navegar pelo site:\n\nüìç **Menu Principal**: Clique na foto de perfil (canto superior direito) para abrir o menu lateral com todas as p√°ginas\n\nüìú **Se√ß√µes**: Role a p√°gina ou clique nos links do menu para: Curriculum, Projetos, Certificados, Galeria, Games\n\nüí¨ **Chat Direto**: Use o chat inferior direito para falar diretamente com o Mikael\n\nüîç Precisa de algo espec√≠fico? Pergunte que te guio!";
        }
        
        if (lowerQuestion.includes('tecnologia') || lowerQuestion.includes('como foi feito') || lowerQuestion.includes('stack')) {
            return "üîß **Stack T√©cnica Completa**:\n\n**Frontend**: HTML5, CSS3, JavaScript ES6+, Tailwind CSS\n**Backend**: Firebase (Firestore, Auth, Storage)\n**Features**: PWA, Chat em tempo real, Sistema de part√≠culas, Painel admin\n**IA**: DeepSeek API (eu mesma! ü¶â)\n\nüí° **Arquitetura**: SPA responsiva com Firebase como backend serverless, deploy automatizado e cache inteligente\n\nQuer detalhes sobre alguma tecnologia espec√≠fica?";
        }
        
        if (lowerQuestion.includes('mikael') || lowerQuestion.includes('desenvolvedor') || lowerQuestion.includes('quem')) {
            return "üë®‚Äçüíª **Mikael Ferreira** - Desenvolvedor Full-Stack talentoso!\n\nüöÄ **Especialidades**: React, Node.js, Firebase, APIs, UI/UX, PWA\n\nüí™ **Experi√™ncia**: Projetos pessoais inovadores, sempre explorando novas tecnologias\n\nüéÆ **Personalidade**: Gamer, criativo, apaixonado por tech, sempre disposto a ajudar\n\nüìû **Contato**: Use o chat do site ou LinkedIn - ele responde rapidamente!\n\n‚ú® Um desenvolvedor que realmente entende tanto de c√≥digo quanto de experi√™ncia do usu√°rio!";
        }
        
        if (lowerQuestion.includes('projeto') || lowerQuestion.includes('trabalho') || lowerQuestion.includes('portfolio')) {
            return "üìÅ **Projetos do Mikael**:\n\nüéØ **Acesso**: Menu lateral > 'All Uploaded Projects' ou role at√© a se√ß√£o Projetos\n\nüåü **Destaques**: Sistemas em tempo real, PWAs, integra√ß√µes de API, interfaces modernas\n\nüîß **Tecnologias**: Cada projeto mostra stack completa e links para reposit√≥rios\n\nüéÆ **Interativos**: Tem at√© jogos e projetos l√∫dicos na se√ß√£o Games!\n\nQuer ver algum projeto espec√≠fico? Posso te guiar diretamente!";
        }
        
        if (lowerQuestion.includes('chat') || lowerQuestion.includes('conversar') || lowerQuestion.includes('contato')) {
            return "üí¨ **Sistema de Chat Inteligente**:\n\nü¶â **Comigo (Minerva)**: Para d√∫vidas t√©cnicas, navega√ß√£o e informa√ß√µes do site\n\nüë®‚Äçüíª **Chat Direto**: Canto inferior direito para falar diretamente com o Mikael\n\n‚ö° **Tempo Real**: Sistema Firebase com respostas instant√¢neas\n\nüì± **Funciona**: Desktop e mobile, com notifica√ß√µes\n\nEu respondo sobre tecnologia, ele responde sobre oportunidades e projetos!";
        }
        
        if (lowerQuestion.includes('admin') || lowerQuestion.includes('painel') || lowerQuestion.includes('gerenciar')) {
            return "‚öôÔ∏è **Painel Administrativo**:\n\nüîê **Acesso**: Exclusivo para o Mikael via login seguro\n\nüìä **Funcionalidades**: Gerencia mensagens, responde usu√°rios, controla certificados, analytics\n\nüõ†Ô∏è **Tecnologia**: Firebase Auth + Firestore com regras de seguran√ßa\n\nüéÆ **Design**: Tema League of Legends com interface intuitiva\n\n√â onde a m√°gica acontece nos bastidores! ‚ú®";
        }
        
        if (lowerQuestion.includes('problema') || lowerQuestion.includes('erro') || lowerQuestion.includes('n√£o funciona')) {
            return "üîß **Troubleshooting**:\n\nüì± **Mobile**: Tente rotacionar tela ou zoom\nüåê **Conex√£o**: Chat precisa de internet para Firebase\nüîÑ **Lento**: PWA cache na primeira carga\nüìç **Menu**: Clique na foto de perfil, n√£o no espa√ßo ao lado\n\nüí° **Dica**: Ctrl+F5 (hard reload) resolve 90% dos problemas\n\nDescreva o problema espec√≠fico que posso dar solu√ß√£o mais direcionada!";
        }
        
        if (lowerQuestion.includes('carreira') || lowerQuestion.includes('trabalho') || lowerQuestion.includes('contrat')) {
            return "üíº **Mikael est√° Dispon√≠vel**!\n\nüöÄ **Procura**: Oportunidades como desenvolvedor full-stack\n\nüí° **Oferece**: Solu√ß√µes criativas, c√≥digo limpo, aprendizado r√°pido\n\nüéØ **Especialista**: JavaScript, React, Node.js, Firebase, APIs\n\nüìû **Contato Direto**: Use o chat inferior direito ou LinkedIn\n\n‚≠ê **Garantia**: Profissional dedicado que entrega resultados de qualidade!";
        }
        
        return "ü¶â **Minerva aqui!** Sou especialista em **TUDO** sobre este portfolio!\n\n‚ùì **Posso ajudar com**:\n‚Ä¢ Navega√ß√£o e funcionalidades\n‚Ä¢ Tecnologias e arquitetura\n‚Ä¢ Informa√ß√µes sobre o Mikael\n‚Ä¢ Troubleshooting t√©cnico\n‚Ä¢ Projetos e demonstra√ß√µes\n‚Ä¢ Oportunidades de carreira\n\n‚ú® **Seja espec√≠fica(o)**: Quanto mais detalhes na pergunta, melhor posso ajudar!\n\nüéØ Exemplos: 'Como foi feito o sistema de chat?', 'Quais projetos React o Mikael tem?', 'Como contact√°-lo para freelance?'";
    }

    startThinking() {
        this.isThinking = true;
        const owl = document.getElementById('minerva-owl');
        const dots = document.getElementById('thinking-dots');
        
        owl.classList.add('thinking');
        dots.style.display = 'block';
        
        // Adicionar indicador visual no chat
        this.addMessage('ü¶â Pensando...', 'assistant');
    }

    stopThinking() {
        this.isThinking = false;
        const owl = document.getElementById('minerva-owl');
        const dots = document.getElementById('thinking-dots');
        
        owl.classList.remove('thinking');
        dots.style.display = 'none';
        
        // Remover √∫ltimo "Pensando..." se existir
        const messages = document.querySelectorAll('.minerva-message.assistant');
        const lastMessage = messages[messages.length - 1];
        if (lastMessage && lastMessage.textContent.includes('Pensando...')) {
            lastMessage.remove();
        }
    }

    animateEyes(event) {
        const owl = document.getElementById('minerva-owl');
        if (!owl) return;
        
        const rect = owl.getBoundingClientRect();
        const owlCenterX = rect.left + rect.width / 2;
        const owlCenterY = rect.top + rect.height / 2;
        
        const mouseX = event.clientX;
        const mouseY = event.clientY;
        
        const deltaX = mouseX - owlCenterX;
        const deltaY = mouseY - owlCenterY;
        
        const angle = Math.atan2(deltaY, deltaX);
        const distance = Math.min(Math.sqrt(deltaX * deltaX + deltaY * deltaY) / 10, 3);
        
        const pupils = owl.querySelectorAll('.pupil');
        pupils.forEach(pupil => {
            const moveX = Math.cos(angle) * distance;
            const moveY = Math.sin(angle) * distance;
            pupil.style.transform = `translate(${moveX}px, ${moveY}px)`;
        });
    }
}

// Inicializar Minerva quando o DOM estiver pronto
document.addEventListener('DOMContentLoaded', () => {
    // Aguardar um pouco para garantir que outros scripts foram carregados
    setTimeout(() => {
        window.minerva = new MinervaAssistant();
    }, 1000);
});

export default MinervaAssistant;
